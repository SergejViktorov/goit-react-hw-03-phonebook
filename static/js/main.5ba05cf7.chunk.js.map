{"version":3,"sources":["Components/ContactForm/ContactForm .js","Components/ContactList/ContactList .js","Components/Filter/Filter.js","App.js","index.js"],"names":["INITIALSTATE","name","number","ContactForm","state","handleChange","target","value","setState","handleSubmit","e","preventDefault","onAdd","props","validateForm","id","uuid","reset","onCheckUnique","alert","this","onSubmit","onChange","type","placeholder","pattern","title","required","Component","ContactListItem","onRemove","onClick","ContactList","contacts","lengs","map","contact","Filter","filter","App","henlerAddContact","newContact","hendleCheck","isExistContact","find","hendleRemove","filterChange","getVisibleContacts","toLowerCase","includes","console","log","localStorage","getItem","parsedContacts","JSON","parse","prevProps","prevState","setItem","stringify","visiableContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5ba05cf7.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { v4 as uuid } from 'uuid'\r\n\r\nconst INITIALSTATE = {\r\n\tname: '',\r\n\tnumber: '',\r\n}\r\n\r\nclass ContactForm extends Component {\r\n\tstate = INITIALSTATE\r\n\r\n\thandleChange = ({ target }) => {\r\n\t\tconst { name, value } = target\r\n\t\tthis.setState({ [name]: value })\r\n\t}\r\n\r\n\thandleSubmit = (e) => {\r\n\t\te.preventDefault()\r\n\r\n\t\tconst { name, number } = this.state\r\n\t\tconst { onAdd } = this.props\r\n\t\tconst isValidate = this.validateForm()\r\n\r\n\t\tif (!isValidate) return\r\n\r\n\t\tonAdd({ id: uuid(), name, number })\r\n\r\n\t\tthis.reset()\r\n\t}\r\n\r\n\tvalidateForm = () => {\r\n\t\tconst { name, number } = this.state\r\n\t\tconst { onCheckUnique } = this.props\r\n\r\n\t\tif (!name || !number) {\r\n\t\t\talert('Some filed is empty')\r\n\t\t\treturn false\r\n\t\t}\r\n\t\treturn onCheckUnique(name)\r\n\t}\r\n\r\n\treset = () => {\r\n\t\tthis.setState(INITIALSTATE)\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { name, number } = this.state\r\n\t\treturn (\r\n\t\t\t<form onSubmit={this.handleSubmit}>\r\n\t\t\t\t<label>\r\n\t\t\t\t\tName\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\t\tplaceholder=\"Enter name\"\r\n\t\t\t\t\t\tpattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n\t\t\t\t\t\ttitle=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t/>\r\n\t\t\t\t</label>\r\n\r\n\t\t\t\t<label>\r\n\t\t\t\t\tNumber\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tvalue={number}\r\n\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\ttype=\"tel\"\r\n\t\t\t\t\t\tname=\"number\"\r\n\t\t\t\t\t\tplaceholder=\"Enter number\"\r\n\t\t\t\t\t\tpattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n\t\t\t\t\t\ttitle=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t/>\r\n\t\t\t\t</label>\r\n\t\t\t\t<button type=\"submit\">Add contact</button>\r\n\t\t\t</form>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default ContactForm\r\n","import React from 'react'\r\n\r\nconst ContactListItem = ({ id, name, number, onRemove }) => {\r\n\treturn (\r\n\t\t<li>\r\n\t\t\t{name}:{number} <button onClick={() => onRemove(id)}>delete</button>\r\n\t\t</li>\r\n\t)\r\n}\r\n\r\nconst ContactList = ({ contacts, onRemove }) => {\r\n\tif (contacts.lengs === 0) return null\r\n\treturn (\r\n\t\t<ul>\r\n\t\t\t{contacts.map((contact) => (\r\n\t\t\t\t<ContactListItem {...contact} onRemove={onRemove} />\r\n\t\t\t))}\r\n\t\t</ul>\r\n\t)\r\n}\r\n\r\nexport default ContactList\r\n","import React from 'react'\r\n\r\nconst Filter = ({ filter, onChange }) => {\r\n\treturn (\r\n\t\t<input\r\n\t\t\ttype=\"text\"\r\n\t\t\tname=\"filter\"\r\n\t\t\tvalue={filter}\r\n\t\t\tonChange={({ target }) => onChange(target.value)}\r\n\t\t\tplaceholder=\"Enter name for Search\"\r\n\t\t/>\r\n\t)\r\n}\r\n\r\nexport default Filter\r\n","import { Component } from 'react'\nimport ContactForm from './Components/ContactForm'\nimport ContactList from './Components/ContactList'\nimport Filter from './Components/Filter'\n\nclass App extends Component {\n\tstate = {\n\t\tcontacts: [\n\t\t\t{ id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n\t\t\t{ id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n\t\t\t{ id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n\t\t\t{ id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n\t\t],\n\t\tfilter: '',\n\t}\n\n\thenlerAddContact = (newContact) =>\n\t\tthis.setState(({ contacts }) => ({\n\t\t\tcontacts: [...contacts, newContact],\n\t\t}))\n\n\thendleCheck = (name) => {\n\t\tconst { contacts } = this.state\n\n\t\tconst isExistContact = !!contacts.find((contact) => contact.name === name)\n\t\tisExistContact && alert('Contact is already exist')\n\n\t\treturn !isExistContact\n\t}\n\n\thendleRemove = (id) =>\n\t\tthis.setState(({ contacts }) => ({\n\t\t\tcontacts: contacts.filter((contact) => contact.id !== id),\n\t\t}))\n\n\tfilterChange = (filter) => this.setState({ filter })\n\n\tgetVisibleContacts = () => {\n\t\tconst { contacts, filter } = this.state\n\t\treturn contacts.filter((contact) =>\n\t\t\tcontact.name.toLowerCase().includes(filter.toLowerCase())\n\t\t)\n\t}\n\n\tcomponentDidMount() {\n\t\tconsole.log('App componentDidiMout')\n\t\tconst contacts = localStorage.getItem('contacts')\n\n\t\tconst parsedContacts = JSON.parse(contacts)\n\t\t// \tconsole.log(parsedContacts)\n\t\tthis.setState({ contacts: parsedContacts })\n\t}\n\n\tcomponentDidUpdate(prevProps, prevState) {\n\t\tconsole.log('componentDidUpdate')\n\t\tif (this.state.contacts !== prevState.contacts) {\n\t\t\tlocalStorage.setItem('contacts', JSON.stringify(this.state.contacts))\n\t\t}\n\t}\n\n\trender() {\n\t\tconsole.log('app')\n\t\tconst { filter } = this.state\n\t\tconst visiableContacts = this.getVisibleContacts()\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h2>Phonebook</h2>\n\t\t\t\t<ContactForm\n\t\t\t\t\tonAdd={this.henlerAddContact}\n\t\t\t\t\tonCheckUnique={this.hendleCheck}\n\t\t\t\t/>\n\n\t\t\t\t<h2>Contacts</h2>\n\t\t\t\t<Filter filter={filter} onChange={this.filterChange} />\n\t\t\t\t<ContactList contacts={visiableContacts} onRemove={this.hendleRemove} />\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}